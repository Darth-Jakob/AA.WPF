<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:AA.WPF.Controls">

    <Style TargetType="{x:Type control:SpinNumericTextBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF333333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:SpinNumericTextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="26"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="26"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Button Content="&lt;" x:Name="PART_ltButton" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                FocusVisualStyle="{x:Null}" FontSize="10" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <TextBox Grid.Column="1" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                 Margin="3,1" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center"  VerticalContentAlignment="Center"
                                 BorderThickness="0" MinWidth="28"
                                 TextAlignment="Center" IsHitTestVisible="False" IsTabStop="False" FocusVisualStyle="{x:Null}"/>
                        <Button Grid.Column="2" Content="&gt;" x:Name="PART_RtButton" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                FocusVisualStyle="{x:Null}" FontSize="10" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type control:MultiSelectComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFffffff"/>
        <Setter Property="BorderBrush" Value="#FFbbbfc6"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:MultiSelectComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom" VerticalOffset="2">
                            <!--<Border x:Name="shadow" Background="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">-->
                            <Border x:Name="dropDownBorder" BorderBrush="#FFbbbfc6" BorderThickness="1" Background="#FFffffff" CornerRadius="4" 
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,3" >
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                            <!--</Border>-->
                        </Popup>
                        <ToggleButton x:Name="toggleButton" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Focusable" Value="false"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        Background="{TemplateBinding Background}"
                                                        CornerRadius="4">
                                                    <Grid HorizontalAlignment="Right">
                                                        <Image x:Name="arrow_up" Margin="0,0,6,0" Source="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_down_n.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                                        <Image x:Name="arrow_down" Margin="0,0,6,0" Source="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_up_n.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="true">
                                                        <Setter Property="Visibility" TargetName="arrow_up" Value="Visible"/>
                                                        <Setter Property="Visibility" TargetName="arrow_down" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Source" TargetName="arrow_up" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_down_f.png"/>
                                                        <Setter Property="Source" TargetName="arrow_down" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_up_f.png"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="true">
                                                        <Setter Property="Source" TargetName="arrow_up" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_down_p.png"/>
                                                        <Setter Property="Source" TargetName="arrow_down" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_up_p.png"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Source" TargetName="arrow_up" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_down_d.png"/>
                                                        <Setter Property="Source" TargetName="arrow_down" Value="pack://application:,,,/Resources/Images/BasicControl/UserControl/filter_b_arrow_up_d.png"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="14,0,0,0"/>
                        <TextBlock Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" Foreground="#cfd7e3" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="14,0,0,0" IsHitTestVisible="false"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Background" TargetName="shadow" Value="#71000000"/>
                        </Trigger>-->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type control:MultiSelectComboBoxItem}">
                    <Setter Property="Height" Value="36"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Foreground" Value="#ff000000"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type control:MultiSelectComboBoxItem}">
                                <Grid SnapsToDevicePixels="True">
                                    <CheckBox Background="{TemplateBinding Background}" IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <CheckBox.Template>
                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                <Border Background="{TemplateBinding Background}" >
                                                    <Image x:Name="img" Source="pack://Application:,,,/Resources/Images/BasicControl/UserControl/filter_check.png" Visibility="Collapsed" Stretch="None"
                                                               Margin="14,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Visibility" TargetName="img" Value="Visible"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </CheckBox.Template>
                                    </CheckBox>
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="42,0,14,0" IsHitTestVisible="False"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FFe9ebef"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFf2f4f7"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type control:ImageButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FF919191"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:ImageButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="img" Stretch="None" Source="{TemplateBinding ImageSourceDefault}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <TextBlock x:Name="PART_TXT" Grid.Column="1" Text="{TemplateBinding Text}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{Binding ImageSourceOver, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="Foreground" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{Binding ImageSourcePressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="Foreground" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsMouseCapturing" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{Binding ImageSourcePressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="Foreground" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{Binding ImageSourceDisabled, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TXT" Property="Foreground" Value="{Binding ForegroundDisable, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="TextLocation" Value="Left">
                            <Setter TargetName="PART_TXT" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="img" Property="Grid.Column" Value="1"/>
                            <!--<Setter TargetName="txt" Property="Margin" Value="0,0,6,0"/>-->
                        </Trigger>
                        <Trigger Property="TextLocation" Value="Bottom">
                            <Setter TargetName="PART_TXT" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="img" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_TXT" Property="Grid.Column" Value="0"/>
                            <!--<Setter TargetName="txt" Property="Margin" Value="0,6,0,0"/>-->
                        </Trigger>
                        <Trigger Property="TextLocation" Value="Top">
                            <Setter TargetName="PART_TXT" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="img" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_TXT" Property="Grid.Column" Value="0"/>
                            <!--<Setter TargetName="txt" Property="Margin" Value="0,0,0,6"/>-->
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter  Property="Visibility" TargetName="PART_TXT" Value="Collapsed"/>
                            <Setter  Property="VerticalContentAlignment" Value="Center"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter  Property="Visibility" TargetName="PART_TXT" Value="Collapsed"/>
                            <Setter  Property="VerticalContentAlignment" Value="Center"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type control:DDListbox}">
        <Setter Property="Template" Value="{StaticResource ct_listbox_channelList}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type control:DDListboxItem}">
                    <Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="#FF30343d"/>
                    <Setter Property="Foreground" Value="#FFb5c1d2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type control:DDListboxItem}">
                                <Border BorderThickness="1" BorderBrush="#262a32" Width="auto" Height="auto" >
                                    <Grid>
                                        <ToggleButton x:Name="toggle" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                                                  Background="{TemplateBinding Background}" >
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border x:Name="brd" BorderThickness="0" Background="{TemplateBinding Background}">
                                                        <ContentPresenter/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="brd" Property="BorderThickness" Value="1"/>
                                                            <Setter TargetName="brd" Property="BorderBrush" Value="#555b67"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Tag" Value="IsPressed"/>
                                                            <Setter TargetName="brd" Property="BorderThickness" Value="1"/>
                                                            <Setter TargetName="brd" Property="BorderBrush" Value="#3c4250"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                        </ToggleButton>
                                        <ContentPresenter Margin="0,0"/>
                                        <Rectangle x:Name="dragOver" Width="4" Fill="#FFffffff" Visibility="Collapsed" IsHitTestVisible="False" HorizontalAlignment="Left"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF3d424d"/>
                                        <Setter Property="Foreground" Value="#FFffffff"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Trigger>
                                    <Trigger Property="Tag" SourceName="toggle" Value="IsPressed">
                                        <Setter Property="Background" Value="#FF21242b"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Foreground" Value="#FFffffff"/>
                                    </Trigger>
                                    <Trigger Property="IsDragOver" Value="True">
                                        <Setter TargetName="dragOver" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
